{"version":3,"file":"dashboard.chunk.js","mappings":"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","sources":["webpack://cherry-insights/./src/modules/Common/ContentWrapper.jsx","webpack://cherry-insights/./src/utils/CacheUtil.js","webpack://cherry-insights/./src/utils/index.js","webpack://cherry-insights/./src/services/ApiService.js","webpack://cherry-insights/./src/modules/Charts/constants.js","webpack://cherry-insights/./src/modules/Charts/UserBase/index.jsx","webpack://cherry-insights/./src/modules/Charts/ActiveUsers/index.jsx","webpack://cherry-insights/./src/modules/Charts/CrashAnalysis/index.jsx","webpack://cherry-insights/./src/modules/Charts/TrafficAnalysis/index.jsx","webpack://cherry-insights/./src/modules/Common/FormField.jsx","webpack://cherry-insights/./src/modules/Charts/UserJourney/index.jsx","webpack://cherry-insights/./src/modules/Charts/EngagementAnalysis/index.jsx","webpack://cherry-insights/./src/modules/Dashboard/index.jsx","webpack://cherry-insights/./src/styles/modules/form-field.scss?534a","webpack://cherry-insights//Users/vj/Projects/amx/cherry-insights/node_modules/moment/locale|sync|/^\\.\\/.*$/"],"sourcesContent":["import React from \"react\";\nimport { Container } from \"reactstrap\";\n\nconst ContentWrapper = (props) => {\n    return (\n        <>\n            {/* content header */}\n            <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n                <Container fluid>\n                    <div className=\"header-body\">\n                        {props.contentHeader}\n                    </div>\n                </Container>\n            </div>\n            {/* content body */}\n            <Container className=\"mt--7\" fluid style={{ minHeight: \"519px\" }}>\n                {props.children}\n            </Container>\n        </>\n    );\n};\n\nexport default ContentWrapper;\n","var localStorage = window.localStorage;\nvar cacheCounter = 0;\n\nclass CacheUtil {\n    constructor(cacheName) {\n        this.id = cacheName || cacheCounter++;\n    }\n    setVal(key, value) {\n        return localStorage.setItem(this.id + \"#\" + key, JSON.stringify({ time: \"0\", text: value }));\n    }\n    saveVal(key, value) {\n        if (typeof value !== \"string\") {\n            return localStorage.setItem(this.id + \"#\" + key, JSON.stringify(value));\n        } else {\n            return localStorage.setItem(this.id + \"#\" + key, value);\n        }\n    }\n    has(key) {\n        var value = localStorage.getItem(this.id + \"#\" + key);\n        return typeof value === \"string\";\n    }\n    getVal(key) {\n        var xString = localStorage.getItem(this.id + \"#\" + key);\n        var x = JSON.parse(xString);\n        return x == undefined ? null : x.text;\n    }\n}\n\nexport default CacheUtil;\n","export { default as CacheUtil } from \"./CacheUtil\";\n\nexport function _no_op() {}\n\n/**\n * Serialize a JSON object into a key=value pairs\n *\n * @method serializeParams\n * @private\n * @param object JSON object of parameters and their values\n * @return {string} Serialized parameters in the form of a query string\n */\nexport function serializeParams(params) {\n    var str = \"\";\n    for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n            if (str !== \"\") str += \"&\";\n            str += key + \"=\" + params[key];\n        }\n    }\n    return str;\n}\n\nexport function debounce(fn, delay) {\n    var timer = null;\n    return function () {\n        var context = this;\n        var args = arguments;\n\n        clearTimeout(timer);\n        timer = setTimeout(function () {\n            fn.apply(context, args);\n        }, delay);\n    };\n}\n\nexport const utils = {\n    _no_op,\n    serializeParams,\n    debounce\n};\n","import axios from \"axios\";\nimport { utils } from \"@utils\";\n\nexport class ApiService {\n    constructor({ prefix = \"\", responseBuilder = res => res } = {}) {\n        this.prefix = prefix;\n        this.responseBuilder = responseBuilder;\n    }\n\n    get = (url, data, options) => this.request({ url, method: \"get\", data, options });\n\n    post = (url, data, options) => this.request({ url, method: \"post\", data, options });\n\n    delete = (url, data, options) => this.request({ url, method: \"delete\", data, options });\n\n    postFormData = (url, data, options) => {\n        data = utils.serializeParams(data);\n        return this.post(url, data, {\n            ...options,\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                ...options.headers\n            }\n        });\n    };\n\n    request = async ({ url, method, data, options = {} }) => {\n        url = this.getUrl({ url, options });\n        let axiosArgs = this.getAxiosArgs({ url, method, data, options });\n        try {\n            let response = await axios.request(axiosArgs);\n            if (\n                response.status !== 200\n                // || (response.data.statusKey !== \"SUCCESS\" && !(response.data instanceof Blob))\n            ) {\n                console.log(\n                    `%c ApiService request: ${url} (${method}) status non success: ${response}`,\n                    \"background: #701414; color: #bada55\"\n                );\n                console.log(`%c throwing`, \"background: #701414; color: #bada55\");\n                throw response;\n            }\n            return this.responseBuilder(response);\n        } catch (thrown) {\n            if (axios.isCancel(thrown)) {\n                console.log(\"Request canceled\", thrown.message);\n            } else {\n                if (\n                    false // add condition for need of custom interceptor in case of failure\n                ) {\n                    let interceptorResp = await this.errorResponseInterceptor({\n                        method,\n                        url,\n                        axiosArgs,\n                        response: thrown.response\n                    });\n                    return this.responseBuilder(interceptorResp);\n                }\n                console.log(\n                    `%c ApiService request: ${url} (${method}) catch: ${thrown.response}`,\n                    \"background: #701414; color: #bada55\"\n                );\n            }\n            throw thrown;\n        }\n    };\n\n    errorResponseInterceptor = ({ url, method, axiosArgs, response }) => {\n        return new Promise.resolve();\n    };\n\n    getUrl = ({ url, options = {} }) => {\n        let result = \"\";\n        let urlType =\n            options && options.urlType && typeof options.urlType === \"string\" ? options.urlType.toLowerCase() : \"\";\n        switch (urlType) {\n            case \"absolute\":\n                result = url;\n                break;\n            case \"relative\":\n                result = this.prefix + url;\n                break;\n            default:\n                result = this.prefix + url;\n        }\n        return result;\n    };\n\n    getAxiosArgs = ({ url, method, data, options = {} }) => {\n        let _options = {\n            ...options,\n            headers: {\n                Accept: \"application/json\",\n                ...options.headers\n            }\n        };\n        let axiosArgs = {\n            url,\n            method,\n            responseType: _options.responseType,\n            headers: _options.headers,\n            cancelToken: _options.cancelToken\n        };\n        switch (method) {\n            case \"get\":\n                axiosArgs = { ...axiosArgs, params: data };\n                break;\n            case \"post\":\n                axiosArgs = { ...axiosArgs, data, params: _options.params };\n                break;\n            default:\n                break;\n        }\n        return axiosArgs;\n    };\n}\n\nexport const Api = {\n    root: new ApiService({ prefix: window.location.href.indexOf(\"github.io\") > -1 ? \"https://api-kwt.almullaexchange.com/xms/api/v1\" : \"https://apib-kwt.almullaexchange.com/xms/api/v1\" })\n}\n","/**\n * References - https://www.chartjs.org/docs/2.9.4/axes/cartesian/time.html#display-formats, https://momentjs.com/docs/#/parsing/\n * Note - for each unit you wll need to adjust limits.minRange || stepsize based on data\n */\nexport const displayFormatsArr = [\n    {\n        order: 0,\n        name: \"millisecond\",\n        label: \"Millisecond\" || \"MILLISECOND\",\n        value: \"h:mm:ss.SSS a\",\n        outputExample: \"11:20:01.123 AM\",\n        successor: \"second\" || 1,\n        predecessor: \"\",\n        timeValue: 1000,\n        ms: 1\n    },\n    {\n        order: 1,\n        name: \"second\",\n        label: \"Second\" || \"SECOND\",\n        value: \"h:mm:ss a\",\n        outputExample: \"11:20:01 AM\",\n        successor: \"minute\" || 2,\n        predecessor: \"millisecond\" || 0,\n        timeValue: 60,\n        ms: 1000\n    },\n    {\n        order: 2,\n        name: \"minute\",\n        label: \"Minute\" || \"MINUTE\",\n        value: \"h:mm a\",\n        outputExample: \"11:20 AM\",\n        successor: \"hour\" || 3,\n        predecessor: \"second\" || 1,\n        timeValue: 60,\n        ms: 1000 * 60\n    },\n    {\n        order: 3,\n        name: \"hour\",\n        label: \"Hour\" || \"HOUR\",\n        value: \"hA\",\n        outputExample: \"11 AM\",\n        successor: \"day\" || 4,\n        predecessor: \"minute\" || 2,\n        timeValue: 24,\n        ms: 1000 * 60 * 60\n    },\n    {\n        order: 4,\n        name: \"day\",\n        label: \"Day\" || \"DAY\",\n        value: \"MMM D\",\n        outputExample: \"Sep 4\",\n        successor: \"week\" || 5,\n        predecessor: \"hour\" || 3,\n        timeValue: 7,\n        ms: 1000 * 60 * 60 * 24\n    },\n    {\n        order: 5,\n        name: \"week\",\n        label: \"Week\" || \"WEEK\",\n        value: \"ll\",\n        outputExample: \"Sep 4 2015\",\n        successor: \"month\" || 6,\n        predecessor: \"day\" || 4,\n        timeValue: getWeeksCountInMonth(),\n        ms: 1000 * 60 * 60 * 24 * 7\n    },\n    {\n        order: 6,\n        name: \"month\",\n        label: \"Month\" || \"MONTH\",\n        value: \"MMM YYYY\",\n        outputExample: \"Sep 2015\",\n        successor: \"quarter\" || 7,\n        predecessor: \"week\" || 5,\n        timeValue: getDaysCountInMonth(),\n        ms: 1000 * 60 * 60 * 24 * getDaysCountInMonth()\n    },\n    {\n        order: 7,\n        name: \"quarter\",\n        label: \"Quarter\" || \"QUARTER\",\n        value: \"[Q]Q - YYYY\",\n        outputExample: \"Q3 - 2015\",\n        successor: \"year\" || 8,\n        predecessor: \"month\" || 6,\n        timeValue: 4,\n        ms: 1000 * 60 * 60 * 24 * getDaysCountInQuarter()\n    },\n    {\n        order: 8,\n        name: \"year\",\n        label: \"Year\" || \"YEAR\",\n        value: \"YYYY\",\n        outputExample: \"2015\",\n        successor: \"\",\n        predecessor: \"quarter\" || 7,\n        timeValue: 10,\n        ms: 1000 * 60 * 60 * 24 * getDaysCountInYear()\n    }\n];\n\nexport const displayFormatsMap = {};\ndisplayFormatsArr.forEach(el => {\n    displayFormatsMap[el.name] = { ...el };\n});\n\nexport const defaultDisplayFormat = \"day\";\n\nexport function getDaysCountInMonth(year = new Date().getFullYear(), month = new Date().getMonth() + 1) {\n    return new Date(month, year, 0).getDate();\n}\n\n/**\n * note: Assuming January through March are considered Q1 (default quarter argument value)\n */\nexport function getDaysCountInQuarter(quarter = Math.floor((new Date().getMonth() + 3) / 3)) {\n    const leapYear = [91, 91, 92, 92];\n    const normalYear = [90, 91, 92, 92];\n    if (isLeap()) {\n        return leapYear[quarter - 1];\n    } else {\n        return normalYear[quarter - 1];\n    }\n}\n\nexport function isLeap(year = new Date().getFullYear()) {\n    return new Date(year, 1, 29).getDate() === 29;\n}\n\nexport function getDaysCountInYear(year = new Date().getFullYear()) {\n    return isLeap(year) ? 366 : 365;\n}\n\n/**\n * note: month is in the range 0..11, just like Dates in js\n */\nexport function getWeeksInMonth(year = new Date().getFullYear(), month = new Date().getMonth()) {\n    const weeks = [],\n        firstDate = new Date(year, month, 1),\n        lastDate = new Date(year, month + 1, 0),\n        numDays = lastDate.getDate();\n\n    let dayOfWeekCounter = firstDate.getDay();\n\n    for (let date = 1; date <= numDays; date++) {\n        if (dayOfWeekCounter === 0 || weeks.length === 0) {\n            weeks.push([]);\n        }\n        weeks[weeks.length - 1].push(date);\n        dayOfWeekCounter = (dayOfWeekCounter + 1) % 7;\n    }\n\n    return weeks\n        .filter(w => !!w.length)\n        .map(w => ({\n            start: w[0],\n            end: w[w.length - 1],\n            dates: w\n        }));\n}\n\n/**\n * note: month is in the range 1..12\n */\nexport function getWeeksCountInMonth(\n    year = new Date().getFullYear(),\n    month = new Date().getMonth() + 1,\n    startDayOfWeek\n) {\n    var firstDayOfWeek = startDayOfWeek || 0; // Get the first day of week week day (0: Sunday, 1: Monday, ...)\n\n    var firstOfMonth = new Date(year, month - 1, 1);\n    var lastOfMonth = new Date(year, month, 0);\n    var numberOfDaysInMonth = lastOfMonth.getDate();\n    var firstWeekDay = (firstOfMonth.getDay() - firstDayOfWeek + 7) % 7;\n\n    var used = firstWeekDay + numberOfDaysInMonth;\n\n    return Math.ceil(used / 7);\n}\n\nexport function convertDaysToMilliseconds(days = 0) {\n    return 1000 * 60 * 60 * 24 * days;\n}\n\nexport const getFilteredDisplayFormats = () => {\n    let result = {};\n    displayFormatsArr.forEach(el => {\n        if (el.name != \"millisecond\" && el.name != \"second\") {\n            result[el.name] = el.value;\n        }\n    });\n    return result;\n};\n\nexport const colorArray = [\n    \"#FF6633\",\n    \"#FFB399\",\n    \"#FF33FF\",\n    \"#FFFF99\",\n    \"#00B3E6\",\n    \"#E6B333\",\n    \"#3366E6\",\n    \"#999966\",\n    \"#99FF99\",\n    \"#B34D4D\",\n    \"#80B300\",\n    \"#809900\",\n    \"#E6B3B3\",\n    \"#6680B3\",\n    \"#66991A\",\n    \"#FF99E6\",\n    \"#CCFF1A\",\n    \"#FF1A66\",\n    \"#E6331A\",\n    \"#33FFCC\",\n    \"#66994D\",\n    \"#B366CC\",\n    \"#4D8000\",\n    \"#B33300\",\n    \"#CC80CC\",\n    \"#66664D\",\n    \"#991AFF\",\n    \"#E666FF\",\n    \"#4DB3FF\",\n    \"#1AB399\",\n    \"#E666B3\",\n    \"#33991A\",\n    \"#CC9999\",\n    \"#B3B31A\",\n    \"#00E680\",\n    \"#4D8066\",\n    \"#809980\",\n    \"#E6FF80\",\n    \"#1AFF33\",\n    \"#999933\",\n    \"#FF3380\",\n    \"#CCCC00\",\n    \"#66E64D\",\n    \"#4D80CC\",\n    \"#9900B3\",\n    \"#E64D66\",\n    \"#4DB380\",\n    \"#FF4D4D\",\n    \"#99E6E6\",\n    \"#6666FF\"\n];\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Chart } from \"chart.js/auto\";\nimport \"chartjs-adapter-moment\";\nimport * as zoom from \"chartjs-plugin-zoom\";\nimport { Line } from \"react-chartjs-2\";\nimport { Api } from \"@services/ApiService\";\nimport { displayFormatsMap, defaultDisplayFormat, getFilteredDisplayFormats } from \"@modules/Charts/constants\";\n\nconst UserBase = props => {\n    const [chartData, setChartData] = useState({});\n    const [displayFormat, setDisplayFormat] = useState(\"\");\n    const [timeRange, setTimeRange] = useState({ min: 0, max: 0 });\n    const [timeAxisRange, setTimeAxisRange] = useState({ min: 0, max: 0 });\n    const chartRef = useRef();\n\n    useEffect(async () => {\n        console.log(\"UserBase mount \");\n\n        setDisplayFormat(defaultDisplayFormat);\n\n        const displayFormatDetails = displayFormatsMap[defaultDisplayFormat];\n        const displayFormatSuccessor = displayFormatsMap[displayFormatDetails.successor];\n        const end = new Date().valueOf();\n        const start = end - displayFormatSuccessor.ms;\n        setTimeRange(prev => ({ ...prev, min: start, max: end }));\n        const axisEnd = end + 1000 * 60 * 60 * 24 * 365;\n        const axisStart = start - 1000 * 60 * 60 * 24 * 365;\n        setTimeAxisRange(prev => ({ ...prev, min: axisStart, max: axisEnd }));\n\n        let data = await fetchApiData(start, end, defaultDisplayFormat);\n        console.log(\"UserBase - Fetched data between \" + new Date(start) + \" and \" + new Date(end), { data });\n        setChartData({\n            datasets: [\n                {\n                    label: \"Active customers\",\n                    data: processData(data.activeCustomers),\n                    parsing: {\n                        xAxisKey: \"date\",\n                        yAxisKey: \"Count\"\n                    },\n                    borderColor: \"#a8ddb5\",\n                    backgroundColor: \"#a8ddb5\",\n                    stack: \"1\"\n                },\n                {\n                    label: \"Inactive customers\",\n                    data: processData(data.inActiveCustomers),\n                    parsing: {\n                        xAxisKey: \"date\",\n                        yAxisKey: \"Count\"\n                    },\n                    borderColor: \"#fdbb84\",\n                    backgroundColor: \"#fdbb84\",\n                    stack: \"1\"\n                },\n                {\n                    label: \"Lost customers\",\n                    data: processData(data.lostCustomers),\n                    parsing: {\n                        xAxisKey: \"date\",\n                        yAxisKey: \"Count\"\n                    },\n                    borderColor: \"#e34a33\",\n                    backgroundColor: \"#e34a33\",\n                    stack: \"1\"\n                },\n                {\n                    label: \"New Users\",\n                    data: processData(data.newUser),\n                    parsing: {\n                        xAxisKey: \"date\",\n                        yAxisKey: \"Count\"\n                    },\n                    borderColor: \"#31a354\",\n                    backgroundColor: \"#31a354\",\n                    stack: \"1\"\n                },\n                {\n                    label: \"Active Users\",\n                    data: processData(data.activeUser),\n                    parsing: {\n                        xAxisKey: \"date\",\n                        yAxisKey: \"Count\"\n                    },\n                    borderColor: \"#ffeda0\",\n                    backgroundColor: \"#ffeda0\",\n                    stack: \"1\"\n                }\n            ]\n        });\n\n        return () => {\n            console.log(\"UserBase mount cleanup \");\n        };\n    }, []);\n\n    const onChangeDisplayFormat = e => {\n        let df = e.target.value;\n        setDisplayFormat(df);\n        const displayFormatDetails = displayFormatsMap[df];\n        const displayFormatSuccessor = displayFormatsMap[displayFormatDetails.successor];\n        const end = new Date().valueOf();\n        const start = end - displayFormatSuccessor.ms;\n        setTimeRange(prev => ({ ...prev, min: start, max: end }));\n        startFetch({ chart: chartRef.current }, start, end, df);\n    };\n\n    const zoom = value => chartRef.current.zoom(value);\n\n    const resetZoom = () => chartRef.current.resetZoom();\n\n    const fetchApiData = async (min, max, df = displayFormat) => {\n        let resp = await Api.root.post(\n            \"/digital/analytics/app-user-base\",\n            {\n                dateRange1: min,\n                dateRange1Str: new Date(min),\n                dateRange2: max,\n                dateRange2Str: new Date(max),\n                displayFormat: df\n            }\n        );\n        return resp.data.results[0];\n    };\n\n    const processData = data => {\n        return data\n            .map(el => {\n                return {\n                    Count: 0,\n                    ...el\n                };\n            })\n            .sort((el1, el2) => (el1.date < el2.date ? 1 : el1.date > el2.date ? -1 : 0));\n    };\n\n    let timer;\n    const startFetch = ({ chart }, _min, _max, df) => {\n        const min = _min || chart.scales.x.min;\n        const max = _max || chart.scales.x.max;\n        clearTimeout(timer);\n        timer = setTimeout(async () => {\n            let data = await fetchApiData(min, max, df);\n            console.log(\"UserBase - Fetched data between \" + new Date(min) + \" and \" + new Date(max), { data });\n            chart.data.datasets[0].data = processData(data.activeCustomers);\n            chart.data.datasets[1].data = processData(data.inActiveCustomers);\n            chart.data.datasets[2].data = processData(data.lostCustomers);\n            chart.data.datasets[3].data = processData(data.newUser);\n            chart.data.datasets[4].data = processData(data.activeUser);\n            chart.stop(); // make sure animations are not running\n            chart.update(\"none\");\n        }, 300);\n    };\n\n    return (\n        // <div style={{ width: \"600px\", height: \"600px\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n        <div style={{ height: \"auto\" }}>\n            <div className=\"chart-filters row mb-3\">\n                <div className=\"col-lg-8\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-4 mb-2\">\n                            <div className=\"form-group-sm\">\n                                <label className=\"form-control-label\" htmlFor=\"display-format\">\n                                    Unit\n                                </label>\n                                <select\n                                    style={{ width: \"100%\" }}\n                                    className={\"form-control-alternative form-control-sm\"}\n                                    id=\"display-format\"\n                                    value={displayFormat}\n                                    onChange={onChangeDisplayFormat}\n                                >\n                                    <option key=\"\" value=\"\">\n                                        Select Display Format\n                                    </option>\n                                    {Object.entries(getFilteredDisplayFormats()).map(([key, value]) => (\n                                        <option key={key} value={key}>\n                                            {key.toUpperCase()}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-4 text-right mb-2\">\n                    <button className={\"btn btn-sm btn-primary\"} title=\"Zoom In\" onClick={() => zoom(1.1)}>\n                        <i className=\"fa fa-search-plus\"></i>\n                    </button>\n                    <button className={\"btn btn-sm btn-primary\"} title=\"Zoom Out\" onClick={() => zoom(0.9)}>\n                        <i className=\"fa fa-search-minus\"></i>\n                    </button>\n                    <button className={\"btn btn-sm btn-primary\"} title=\"Reset\" onClick={resetZoom}>\n                        <i className=\"fa fa-sync\"></i>\n                    </button>\n                </div>\n            </div>\n            <Line\n                ref={chartRef}\n                data={chartData}\n                options={{\n                    // maintainAspectRatio: false,\n                    responsive: true,\n                    scales: {\n                        x: {\n                            grid: {\n                                display: false\n                            },\n                            beginAtZero: true,\n                            position: \"bottom\",\n                            type: \"time\",\n                            min: timeRange.min,\n                            max: timeRange.max,\n                            ticks: {\n                                autoSkip: true,\n                                autoSkipPadding: 5,\n                                maxRotation: 0\n                            },\n                            time: {\n                                unit: displayFormat,\n                                displayFormats: getFilteredDisplayFormats()\n                            }\n                        },\n                        y: {\n                            grid: {\n                                display: false\n                            },\n                            beginAtZero: true,\n                            position: \"left\",\n                            type: \"linear\",\n                            ticks: {\n                                autoSkip: true\n                            },\n                            stacked: true\n                        }\n                    },\n                    plugins: {\n                        title: {\n                            display: true,\n                            position: \"top\",\n                            text: ctx => {\n                                return `\n                                    Chart Info [ zoom level : ${ctx.chart.getZoomLevel()} ] [ start : ${\n                                    ctx.chart.scales.x.min &&\n                                    ctx.chart.scales.x.min != -1 &&\n                                    ctx.chart.scales.x.min != 1\n                                        ? new Date(ctx.chart.scales.x.min).toISOString().split(\"T\")[0]\n                                        : \"-\"\n                                }, end : ${\n                                    ctx.chart.scales.x.max &&\n                                    ctx.chart.scales.x.max != -1 &&\n                                    ctx.chart.scales.x.max != 1\n                                        ? new Date(ctx.chart.scales.x.max).toISOString().split(\"T\")[0]\n                                        : \"-\"\n                                } ]\n                                `;\n                            }\n                        },\n                        legend: {\n                            display: true,\n                            position: \"top\",\n                            labels: {\n                                usePointStyle: true,\n                                pointStyle: \"rectRounded\"\n                            }\n                        },\n                        zoom: {\n                            pan: {\n                                enabled: true,\n                                mode: \"x\",\n                                // overScaleMode: \"x\",\n                                threshold: 100,\n                                onPanComplete: startFetch\n                            },\n                            zoom: {\n                                mode: \"x\",\n                                // overScaleMode: \"x\",\n                                wheel: {\n                                    enabled: true,\n                                    speed: 0.1\n                                },\n                                drag: {\n                                    enabled: false\n                                },\n                                pinch: {\n                                    enabled: false\n                                }, // for mobile devices. would need to add a third party dependency - 'hammer.js'\n                                onZoomComplete: startFetch\n                            },\n                            limits: {\n                                x: {\n                                    minRange: 60 * 1000,\n                                    min: timeAxisRange.min,\n                                    max: timeAxisRange.max\n                                }\n                            }\n                        }\n                    },\n                    transitions: {\n                        zoom: {\n                            animation: {\n                                duration: 100\n                            }\n                        }\n                    },\n                    elements: {\n                        line: {\n                            pointRadius: 1,\n                            tension: 0.4\n                        }\n                    }\n                }}\n            />\n        </div>\n    );\n};\n\nexport default UserBase;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Chart } from \"chart.js/auto\";\nimport \"chartjs-adapter-moment\";\nimport * as zoom from \"chartjs-plugin-zoom\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Api } from \"@services/ApiService\";\nimport { displayFormatsMap, defaultDisplayFormat, getFilteredDisplayFormats } from \"@modules/Charts/constants\";\n\nconst ActiveUsers = props => {\n    const [chartData, setChartData] = useState({});\n    const [displayFormat, setDisplayFormat] = useState(\"\");\n    const [timeRange, setTimeRange] = useState({ min: 0, max: 0 });\n    const [timeAxisRange, setTimeAxisRange] = useState({ min: 0, max: 0 });\n    const chartRef = useRef();\n\n    useEffect(async () => {\n        console.log(\"ActiveUsers mount \");\n\n        setDisplayFormat(defaultDisplayFormat);\n\n        const displayFormatDetails = displayFormatsMap[defaultDisplayFormat];\n        const displayFormatSuccessor = displayFormatsMap[displayFormatDetails.successor];\n        const end = new Date().valueOf();\n        const start = end - displayFormatSuccessor.ms;\n        setTimeRange(prev => ({ ...prev, min: start, max: end }));\n        const axisEnd = end + 1000 * 60 * 60 * 24 * 365;\n        const axisStart = start - 1000 * 60 * 60 * 24 * 365;\n        setTimeAxisRange(prev => ({ ...prev, min: axisStart, max: axisEnd }));\n\n        let data = await fetchData(start, end, defaultDisplayFormat);\n        console.log(\"ActiveUsers - Fetched data between \" + new Date(start) + \" and \" + new Date(end), { data });\n        setChartData({\n            datasets: [\n                {\n                    label: \"WEB\",\n                    data: processData(data),\n                    parsing: {\n                        xAxisKey: \"date\",\n                        yAxisKey: \"WEB\"\n                    },\n                    backgroundColor: \"#fc8d59\",\n                    borderColor: \"#fc8d59\",\n                    borderColor: \"white\"\n                },\n                {\n                    label: \"IOS\",\n                    data: processData(data),\n                    parsing: {\n                        xAxisKey: \"date\",\n                        yAxisKey: \"IOS\"\n                    },\n                    backgroundColor: \"#67a9cf\",\n                    borderColor: \"#67a9cf\",\n                    borderColor: \"white\"\n                },\n                {\n                    label: \"ANDROID\",\n                    data: processData(data),\n                    parsing: {\n                        xAxisKey: \"date\",\n                        yAxisKey: \"ANDROID\"\n                    },\n                    backgroundColor: \"#af8dc3\",\n                    borderColor: \"#af8dc3\",\n                    borderColor: \"white\"\n                }\n            ]\n        });\n\n        return () => {\n            console.log(\"ActiveUsers mount cleanup \");\n        };\n    }, []);\n\n    const onChangeDisplayFormat = e => {\n        let df = e.target.value;\n        setDisplayFormat(df);\n        const displayFormatDetails = displayFormatsMap[df];\n        const displayFormatSuccessor = displayFormatsMap[displayFormatDetails.successor];\n        const end = new Date().valueOf();\n        const start = end - displayFormatSuccessor.ms;\n        setTimeRange(prev => ({ ...prev, min: start, max: end }));\n        startFetch({ chart: chartRef.current }, start, end, df);\n    };\n\n    const zoom = value => chartRef.current.zoom(value);\n\n    const resetZoom = () => chartRef.current.resetZoom();\n\n    const fetchData = async (min, max, df = displayFormat) => {\n        let resp = await Api.root.post(\n            \"/digital/analytics/active-users-count\",\n            {\n                dateRange1: min,\n                dateRange1Str: new Date(min),\n                dateRange2: max,\n                dateRange2Str: new Date(max),\n                displayFormat: df\n            }\n        );\n        return resp.data.results;\n    };\n\n    const processData = data => {\n        return data\n            .map(el => {\n                return {\n                    WEB: 0,\n                    IOS: 0,\n                    ...el\n                };\n            })\n            .sort((el1, el2) => (el1.date < el2.date ? 1 : el1.date > el2.date ? -1 : 0));\n    };\n\n    let timer;\n    const startFetch = ({ chart }, _min, _max, df) => {\n        const min = _min || chart.scales.x.min;\n        const max = _max || chart.scales.x.max;\n        clearTimeout(timer);\n        timer = setTimeout(async () => {\n            let data = await fetchData(min, max, df);\n            console.log(\"ActiveUsers - Fetched data between \" + new Date(min) + \" and \" + new Date(max), { data });\n            chart.data.datasets[0].data = processData(data);\n            chart.data.datasets[1].data = processData(data);\n            chart.data.datasets[2].data = processData(data);\n            chart.stop(); // make sure animations are not running\n            chart.update(\"none\");\n        }, 300);\n    };\n\n    return (\n        // <div style={{ width: \"600px\", height: \"600px\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n        <div style={{ height: \"auto\" }}>\n            <div className=\"chart-filters row mb-3\">\n                <div className=\"col-lg-8\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-4 mb-2\">\n                            <div className=\"form-group-sm\">\n                                <label className=\"form-control-label\" htmlFor=\"display-format\">\n                                    Unit\n                                </label>\n                                <select\n                                    style={{ width: \"100%\" }}\n                                    className={\"form-control-alternative form-control-sm\"}\n                                    id=\"display-format\"\n                                    value={displayFormat}\n                                    onChange={onChangeDisplayFormat}\n                                >\n                                    <option key=\"\" value=\"\">\n                                        Select Display Format\n                                    </option>\n                                    {Object.entries(getFilteredDisplayFormats()).map(([key, value]) => (\n                                        <option key={key} value={key}>\n                                            {key.toUpperCase()}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-4 text-right mb-2\">\n                    <button className={\"btn btn-sm btn-primary\"} title=\"Zoom In\" onClick={() => zoom(1.1)}>\n                        <i className=\"fa fa-search-plus\"></i>\n                    </button>\n                    <button className={\"btn btn-sm btn-primary\"} title=\"Zoom Out\" onClick={() => zoom(0.9)}>\n                        <i className=\"fa fa-search-minus\"></i>\n                    </button>\n                    <button className={\"btn btn-sm btn-primary\"} title=\"Reset\" onClick={resetZoom}>\n                        <i className=\"fa fa-sync\"></i>\n                    </button>\n                </div>\n            </div>\n            <Bar\n                ref={chartRef}\n                data={chartData}\n                options={{\n                    // maintainAspectRatio: false,\n                    responsive: true,\n                    barThickness: 30,\n                    scales: {\n                        x: {\n                            grid: {\n                                display: false\n                            },\n                            beginAtZero: true,\n                            position: \"bottom\",\n                            type: \"time\",\n                            min: timeRange.min,\n                            max: timeRange.max,\n                            ticks: {\n                                autoSkip: true,\n                                autoSkipPadding: 5,\n                                maxRotation: 0\n                            },\n                            time: {\n                                unit: displayFormat,\n                                displayFormats: getFilteredDisplayFormats()\n                            },\n                            stacked: true\n                        },\n                        y: {\n                            grid: {\n                                display: false\n                            },\n                            beginAtZero: true,\n                            position: \"left\",\n                            type: \"linear\",\n                            ticks: {\n                                autoSkip: true\n                            },\n                            stacked: true\n                        }\n                    },\n                    plugins: {\n                        title: {\n                            display: true,\n                            position: \"top\",\n                            text: ctx => {\n                                return `\n                                    Chart Info [ zoom level : ${ctx.chart.getZoomLevel()} ] [ start : ${\n                                    ctx.chart.scales.x.min &&\n                                    ctx.chart.scales.x.min != -1 &&\n                                    ctx.chart.scales.x.min != 1\n                                        ? new Date(ctx.chart.scales.x.min).toISOString().split(\"T\")[0]\n                                        : \"-\"\n                                }, end : ${\n                                    ctx.chart.scales.x.max &&\n                                    ctx.chart.scales.x.max != -1 &&\n                                    ctx.chart.scales.x.max != 1\n                                        ? new Date(ctx.chart.scales.x.max).toISOString().split(\"T\")[0]\n                                        : \"-\"\n                                } ]\n                                `;\n                            }\n                        },\n                        legend: {\n                            display: true,\n                            position: \"top\",\n                            labels: {\n                                usePointStyle: true,\n                                pointStyle: \"rectRounded\"\n                            }\n                        },\n                        zoom: {\n                            pan: {\n                                enabled: true,\n                                mode: \"x\",\n                                // overScaleMode: \"x\",\n                                threshold: 100,\n                                onPanComplete: startFetch\n                            },\n                            zoom: {\n                                mode: \"x\",\n                                // overScaleMode: \"x\",\n                                wheel: {\n                                    enabled: true,\n                                    speed: 0.1\n                                },\n                                drag: {\n                                    enabled: false\n                                },\n                                pinch: {\n                                    enabled: false\n                                }, // for mobile devices. would need to add a third party dependency - 'hammer.js'\n                                onZoomComplete: startFetch\n                            },\n                            limits: {\n                                x: {\n                                    minRange: 60 * 1000,\n                                    min: timeAxisRange.min,\n                                    max: timeAxisRange.max\n                                }\n                            }\n                        }\n                    },\n                    transitions: {\n                        zoom: {\n                            animation: {\n                                duration: 100\n                            }\n                        }\n                    }\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ActiveUsers;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Chart } from \"chart.js/auto\";\nimport \"chartjs-adapter-moment\";\nimport * as zoom from \"chartjs-plugin-zoom\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Api } from \"@services/ApiService\";\nimport { displayFormatsMap, defaultDisplayFormat, getFilteredDisplayFormats } from \"@modules/Charts/constants\";\n\nconst CrashAnalysis = props => {\n    const [chartData, setChartData] = useState({});\n    const [displayFormat, setDisplayFormat] = useState(\"\");\n    const [timeRange, setTimeRange] = useState({ min: 0, max: 0 });\n    const [timeAxisRange, setTimeAxisRange] = useState({ min: 0, max: 0 });\n    const chartRef = useRef();\n\n    useEffect(async () => {\n        console.log(\"CrashAnalysis mount \");\n\n        setDisplayFormat(defaultDisplayFormat);\n\n        const displayFormatDetails = displayFormatsMap[defaultDisplayFormat];\n        const displayFormatSuccessor = displayFormatsMap[displayFormatDetails.successor];\n        const end = new Date().valueOf();\n        const start = end - displayFormatSuccessor.ms;\n        setTimeRange(prev => ({ ...prev, min: start, max: end }));\n        const axisEnd = end + 1000 * 60 * 60 * 24 * 365;\n        const axisStart = start - 1000 * 60 * 60 * 24 * 365;\n        setTimeAxisRange(prev => ({ ...prev, min: axisStart, max: axisEnd }));\n\n        let data = await fetchApiData(start, end, defaultDisplayFormat);\n        console.log(\"CrashAnalysis - Fetched data between \" + new Date(start) + \" and \" + new Date(end), { data });\n        setChartData({\n            datasets: [\n                // {\n                //     label: \"WEB\",\n                //     data: processData(data),\n                //     parsing: {\n                //         xAxisKey: \"date\",\n                //         yAxisKey: \"WEB\"\n                //     },\n                //     backgroundColor: \"#fc8d59\",\n                //     borderColor: \"#fc8d59\",\n                //     borderColor: \"white\"\n                // },\n                {\n                    label: \"IOS\",\n                    data: processData(data),\n                    parsing: {\n                        xAxisKey: \"date\",\n                        yAxisKey: \"IOS\"\n                    },\n                    backgroundColor: \"#67a9cf\",\n                    borderColor: \"#67a9cf\",\n                    borderColor: \"white\"\n                },\n                {\n                    label: \"ANDROID\",\n                    data: processData(data),\n                    parsing: {\n                        xAxisKey: \"date\",\n                        yAxisKey: \"ANDROID\"\n                    },\n                    backgroundColor: \"#af8dc3\",\n                    borderColor: \"#af8dc3\",\n                    borderColor: \"white\"\n                }\n            ]\n        });\n\n        return () => {\n            console.log(\"CrashAnalysis mount cleanup \");\n        };\n    }, []);\n\n    const onChangeDisplayFormat = e => {\n        let df = e.target.value;\n        setDisplayFormat(df);\n        const displayFormatDetails = displayFormatsMap[df];\n        const displayFormatSuccessor = displayFormatsMap[displayFormatDetails.successor];\n        const end = new Date().valueOf();\n        const start = end - displayFormatSuccessor.ms;\n        setTimeRange(prev => ({ ...prev, min: start, max: end }));\n        startFetch({ chart: chartRef.current }, start, end, df);\n    };\n\n    const zoom = value => chartRef.current.zoom(value);\n\n    const resetZoom = () => chartRef.current.resetZoom();\n\n    const fetchApiData = async (min, max, df = displayFormat) => {\n        let resp = await Api.root.post(\n            \"/digital/analytics/app-crashes-count\",\n            {\n                dateRange1: min,\n                dateRange1Str: new Date(min),\n                dateRange2: max,\n                dateRange2Str: new Date(max),\n                displayFormat: df\n            }\n        );\n        return resp.data.results;\n    };\n\n    const processData = data => {\n        return data\n            .map(el => {\n                return {\n                    WEB: 0,\n                    IOS: 0,\n                    ...el\n                };\n            })\n            .sort((el1, el2) => (el1.date < el2.date ? 1 : el1.date > el2.date ? -1 : 0));\n    };\n\n    let timer;\n    const startFetch = ({ chart }, _min, _max, df) => {\n        const min = _min || chart.scales.x.min;\n        const max = _max || chart.scales.x.max;\n        clearTimeout(timer);\n        timer = setTimeout(async () => {\n            let data = await fetchApiData(min, max, df);\n            console.log(\"CrashAnalysis - Fetched data between \" + new Date(min) + \" and \" + new Date(max), { data });\n            chart.data.datasets[0].data = processData(data);\n            chart.data.datasets[1].data = processData(data);\n            // chart.data.datasets[2].data = processData(data);\n            chart.stop(); // make sure animations are not running\n            chart.update(\"none\");\n        }, 300);\n    };\n\n    return (\n        // <div style={{ width: \"600px\", height: \"600px\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n        <div style={{ height: \"auto\" }}>\n            <div className=\"chart-filters row mb-3\">\n                <div className=\"col-lg-8\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-4 mb-2\">\n                            <div className=\"form-group-sm\">\n                                <label className=\"form-control-label\" htmlFor=\"display-format\">\n                                    Unit\n                                </label>\n                                <select\n                                    style={{ width: \"100%\" }}\n                                    className={\"form-control-alternative form-control-sm\"}\n                                    id=\"display-format\"\n                                    value={displayFormat}\n                                    onChange={onChangeDisplayFormat}\n                                >\n                                    <option key=\"\" value=\"\">\n                                        Select Display Format\n                                    </option>\n                                    {Object.entries(getFilteredDisplayFormats()).map(([key, value]) => (\n                                        <option key={key} value={key}>\n                                            {key.toUpperCase()}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-4 text-right mb-2\">\n                    <button className={\"btn btn-sm btn-primary\"} title=\"Zoom In\" onClick={() => zoom(1.1)}>\n                        <i className=\"fa fa-search-plus\"></i>\n                    </button>\n                    <button className={\"btn btn-sm btn-primary\"} title=\"Zoom Out\" onClick={() => zoom(0.9)}>\n                        <i className=\"fa fa-search-minus\"></i>\n                    </button>\n                    <button className={\"btn btn-sm btn-primary\"} title=\"Reset\" onClick={resetZoom}>\n                        <i className=\"fa fa-sync\"></i>\n                    </button>\n                </div>\n            </div>\n            <Bar\n                ref={chartRef}\n                data={chartData}\n                options={{\n                    // maintainAspectRatio: false,\n                    responsive: true,\n                    barThickness: 30,\n                    scales: {\n                        x: {\n                            grid: {\n                                display: false\n                            },\n                            beginAtZero: true,\n                            position: \"bottom\",\n                            type: \"time\",\n                            min: timeRange.min,\n                            max: timeRange.max,\n                            ticks: {\n                                autoSkip: true,\n                                autoSkipPadding: 5,\n                                maxRotation: 0\n                            },\n                            time: {\n                                unit: displayFormat,\n                                displayFormats: getFilteredDisplayFormats()\n                            },\n                            stacked: true\n                        },\n                        y: {\n                            grid: {\n                                display: false\n                            },\n                            beginAtZero: true,\n                            position: \"left\",\n                            type: \"linear\",\n                            ticks: {\n                                autoSkip: true\n                            },\n                            stacked: true\n                        }\n                    },\n                    plugins: {\n                        title: {\n                            display: true,\n                            position: \"top\",\n                            text: ctx => {\n                                return `\n                                    Chart Info [ zoom level : ${ctx.chart.getZoomLevel()} ] [ start : ${\n                                    ctx.chart.scales.x.min &&\n                                    ctx.chart.scales.x.min != -1 &&\n                                    ctx.chart.scales.x.min != 1\n                                        ? new Date(ctx.chart.scales.x.min).toISOString().split(\"T\")[0]\n                                        : \"-\"\n                                }, end : ${\n                                    ctx.chart.scales.x.max &&\n                                    ctx.chart.scales.x.max != -1 &&\n                                    ctx.chart.scales.x.max != 1\n                                        ? new Date(ctx.chart.scales.x.max).toISOString().split(\"T\")[0]\n                                        : \"-\"\n                                } ]\n                                `;\n                            }\n                        },\n                        legend: {\n                            display: true,\n                            position: \"top\",\n                            labels: {\n                                usePointStyle: true,\n                                pointStyle: \"rectRounded\"\n                            }\n                        },\n                        zoom: {\n                            pan: {\n                                enabled: true,\n                                mode: \"x\",\n                                // overScaleMode: \"x\",\n                                threshold: 100,\n                                onPanComplete: startFetch\n                            },\n                            zoom: {\n                                mode: \"x\",\n                                // overScaleMode: \"x\",\n                                wheel: {\n                                    enabled: true,\n                                    speed: 0.1\n                                },\n                                drag: {\n                                    enabled: false\n                                },\n                                pinch: {\n                                    enabled: false\n                                }, // for mobile devices. would need to add a third party dependency - 'hammer.js'\n                                onZoomComplete: startFetch\n                            },\n                            limits: {\n                                x: {\n                                    minRange: 60 * 1000,\n                                    min: timeAxisRange.min,\n                                    max: timeAxisRange.max\n                                }\n                            }\n                        }\n                    },\n                    transitions: {\n                        zoom: {\n                            animation: {\n                                duration: 100\n                            }\n                        }\n                    }\n                }}\n            />\n        </div>\n    );\n};\n\nexport default CrashAnalysis;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Chart } from \"chart.js/auto\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Api } from \"@services/ApiService\";\nimport { displayFormatsMap, defaultDisplayFormat, getFilteredDisplayFormats, colorArray } from \"@modules/Charts/constants\";\n\nconst TrafficAnalysis = props => {\n    const [chartData, setChartData] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [displayFormat, setDisplayFormat] = useState(\"\");\n    const [timeRange, setTimeRange] = useState({ min: 0, max: 0 });\n    const chartRef = useRef();\n\n    useEffect(async () => {\n        console.log(\"TrafficAnalysis mount \");\n\n        setDisplayFormat(defaultDisplayFormat);\n\n        const displayFormatDetails = displayFormatsMap[defaultDisplayFormat];\n        const displayFormatSuccessor = displayFormatsMap[displayFormatDetails.successor];\n        const end = new Date().valueOf();\n        const start = end - displayFormatSuccessor.ms;\n        setTimeRange(prev => ({ ...prev, min: start, max: end }));\n\n        let data = await fetchApiData(start, end, defaultDisplayFormat);\n        console.log(\"TrafficAnalysis - Fetched data between \" + new Date(start) + \" and \" + new Date(end), { data });\n        let [labels, _data] = processData(data);\n        setChartData({\n            labels,\n            datasets: [\n                {\n                    label: \"Traffic\",\n                    data: _data,\n                    backgroundColor: colorArray.slice(0, _data.length + 1)\n                }\n            ]\n        });\n\n        return () => {\n            console.log(\"TrafficAnalysis mount cleanup \");\n        };\n    }, []);\n\n    const fetchApiData = async (min, max) => {\n        try {\n            setLoading(true);\n            let resp = await Api.root.post(\n                \"/digital/analytics/web-referrers-count\",\n                {\n                    dateRange1: min,\n                    dateRange1Str: new Date(min),\n                    dateRange2: max,\n                    dateRange2Str: new Date(max),\n                    displayFormat\n                }\n            );\n            return resp.data.results;\n        } catch (error) {\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const processData = data => {\n        let dataMap = {};\n        data.forEach(el => {\n            let { date, dateStr, ...rest } = el;\n            Object.entries(rest).forEach( ([key, value]) => {\n                if(dataMap.hasOwnProperty(key)){\n                    dataMap[key] = dataMap[key] + value;\n                }else{\n                    dataMap[key] = value;\n                }\n            } );\n        });\n        return [[...Object.keys(dataMap)], [...Object.values(dataMap)]];\n    };\n\n    const onClickSearch = async () => {\n        let data = await fetchApiData(timeRange.min, timeRange.max);\n        console.log(\"TrafficAnalysis - Fetched data between \" + new Date(timeRange.min) + \" and \" + new Date(timeRange.max), { data });\n        let [labels, _data] = processData(data);\n        setChartData({\n            labels,\n            datasets: [\n                {\n                    label: \"Traffic\",\n                    data: _data,\n                    backgroundColor: colorArray.slice(0, _data.length + 1)\n                }\n            ]\n        });\n    }\n\n    return (\n        <div style={{ height: \"auto\" }} className={loading ? \"loader-inline\" : \"\"}>\n            <div className=\"chart-filters row mb-3\">\n                <div className=\"col-lg-8\">\n                    <div className=\"row\">\n                        {/* <div className=\"col-lg-3 mb-2\">\n                            <div className=\"form-group-sm\">\n                                <label className=\"form-control-label\" htmlFor=\"display-format\">\n                                    Unit\n                                </label>\n                                <select\n                                    style={{ width: \"100%\" }}\n                                    className={\"form-control-alternative form-control-sm\"}\n                                    id=\"display-format\"\n                                    value={displayFormat}\n                                    onChange={e => setDisplayFormat(e.target.value)}\n                                >\n                                    <option key=\"\" value=\"\">\n                                        Select Display Format\n                                    </option>\n                                    {Object.entries(getFilteredDisplayFormats()).map(([key, value]) => (\n                                        <option key={key} value={key}>\n                                            {key.toUpperCase()}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div> */}\n                        <div className=\"col-lg-3 mb-2\">\n                            <div className=\"form-group-sm\">\n                                <label className=\"form-control-label\" htmlFor=\"start-time\">\n                                    Start\n                                </label>\n                                <input\n                                    style={{ width: \"100%\", color: !timeRange.min ? \"transparent\" : \"\" }}\n                                    className={\"form-control-alternative form-control-sm\"}\n                                    type=\"date\"\n                                    id=\"start-time\"\n                                    value={timeRange.min ? new Date(timeRange.min).toISOString().split(\"T\")[0] : \"\"}\n                                    onChange={e =>\n                                        setTimeRange(prev => ({ ...prev, min: new Date(e.target.value).valueOf() }))\n                                    }\n                                />\n                            </div>\n                        </div>\n                        <div className=\"col-lg-3 mb-2\">\n                            <div className=\"form-group-sm\">\n                                <label className=\"form-control-label\" htmlFor=\"end-time\">\n                                    End\n                                </label>\n                                <input\n                                    style={{ width: \"100%\", color: !timeRange.max ? \"transparent\" : \"\" }}\n                                    className={\"form-control-alternative form-control-sm\"}\n                                    type=\"date\"\n                                    id=\"end-time\"\n                                    value={timeRange.max ? new Date(timeRange.max).toISOString().split(\"T\")[0] : \"\"}\n                                    onChange={e =>\n                                        setTimeRange(prev => ({ ...prev, max: new Date(e.target.value).valueOf() }))\n                                    }\n                                />\n                            </div>\n                        </div>\n                        <div className=\"col-lg-3 mb-2 d-flex align-items-end\">\n                            <button className=\"btn btn-sm btn-primary\" onClick={onClickSearch}>\n                                <i className=\"fa fa-search\" />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div style={{ position: \"relative\", height: \"450px\" }}>\n                <Pie\n                    ref={chartRef}\n                    data={chartData}\n                    options={{\n                        maintainAspectRatio: false,\n                        plugins: {\n                            title: {\n                                display: true,\n                                position: \"top\",\n                                text: ctx => {\n                                    return ``;\n                                }\n                            },\n                            legend: {\n                                display: true,\n                                position: \"top\",\n                                labels: {\n                                    usePointStyle: true,\n                                    pointStyle: \"rectRounded\"\n                                }\n                            }\n                        },\n                        transitions: {\n                            zoom: {\n                                animation: {\n                                    duration: 100\n                                }\n                            }\n                        }\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default TrafficAnalysis;\n","import React, { useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { useAsyncState } from \"@modules/utils\";\nimport \"@styles/modules/form-field.scss\";\n\n// import TextField from \"@material-ui/core/TextField\";\nconst TextField = React.forwardRef(({ id, label, value, onChangeInput, helperText, errorMsg, ...restProps }, ref) => {\n    return (\n        <div className={`form-group${errorMsg ? \" form-group-error\" : \"\"}`}>\n            <label className=\"form-control-label\" htmlFor={id}>\n                {label}\n            </label>\n            <input\n                ref={ref}\n                id={id}\n                className={`form-control-alternative form-control`}\n                onChange={e => onChangeInput(e.target.value)}\n                {...restProps}\n            />\n            <span className={`form-control-helper-text`}>{helperText}</span>\n        </div>\n    );\n});\n\nimport Select from \"react-select\";\nconst SelectField = React.forwardRef(\n    (\n        { id, label, options = [], value, defaultValue, onChangeInput, disabled, helperText, errorMsg, ...restProps },\n        ref\n    ) => {\n        useEffect(() => {\n            /**\n             * scenario 1 - if value is passed instead of object and is present in the given options\n             */\n            if (value !== \"\" && typeof value !== \"object\") {\n                let val = options.find(opt => opt.value === value);\n                if (val) {\n                    onChangeInput(val);\n                }\n            }\n\n            /**\n             * scenario 2 - if defaultValue is passed\n             */\n            if (value === \"\" && defaultValue !== \"\") {\n                if (typeof defaultValue === \"object\") {\n                    let val = options.find(opt => opt.value === defaultValue.value);\n                    if (val) {\n                        onChangeInput(val);\n                    }\n                } else {\n                    let val = options.find(opt => opt.value === defaultValue);\n                    if (val) {\n                        onChangeInput(val);\n                    }\n                }\n            }\n\n            /**\n             * scenario 1 - populate single option\n             */\n            if (options.length === 1) {\n                onChangeInput(options[0]);\n            }\n\n            return () => {};\n        }, [value, defaultValue, options]);\n\n        return (\n            <div className={`form-group${errorMsg ? \" form-group-error\" : \"\"}`}>\n                {label && (\n                    <label className=\"form-control-label\" htmlFor={id}>\n                        {label}\n                    </label>\n                )}\n                <Select\n                    ref={ref}\n                    id={id}\n                    styles={{\n                        control: (styles, state) => ({\n                            ...styles,\n                            ...(state.isFocussed\n                                ? {\n                                      boxShadow: \"none\"\n                                  }\n                                : {}),\n                            height: \"43px\",\n                            border: 0,\n                            borderRadius: \"0.375rem\",\n                            boxShadow: \"0 1px 3px rgb(50 50 93 / 15%), 0 1px 0 rgb(0 0 0 / 2%)\",\n                            WebkitBoxShadow: \"0 1px 3px rgb(50 50 93 / 15%), 0 1px 0 rgb(0 0 0 / 2%)\",\n                            transition: \"box-shadow 0.15s ease, -webkit-box-shadow 0.15s ease\"\n                        })\n                    }}\n                    options={options}\n                    value={value}\n                    onChange={newVal => onChangeInput(newVal)}\n                    isDisabled={disabled}\n                    {...restProps}\n                />\n                <span className={`form-control-helper-text`}>{helperText}</span>\n            </div>\n        );\n    }\n);\n\nconst DateTimeField = React.forwardRef(\n    ({ id, label, value, onChangeInput, helperText, errorMsg, ...restProps }, ref) => {\n        return (\n            <div className={`form-group${errorMsg ? \" form-group-error\" : \"\"}`}>\n                <label className=\"form-control-label\" htmlFor={id}>\n                    {label}\n                </label>\n                <input\n                    style={{ width: \"100%\", color: !value ? \"transparent\" : \"\" }}\n                    className={\"form-control-alternative form-control\"}\n                    type=\"date\"\n                    id={id}\n                    value={value ? new Date(timeRange.min).toISOString().split(\"T\")[0] : \"\"}\n                    onChange={e => onChangeInput(new Date(e.target.value).valueOf())}\n                />\n                <span className={`form-control-helper-text`}>{helperText}</span>\n            </div>\n        );\n    }\n);\n\nconst commonValidationProfiles = {\n    default(val, config = {}) {\n        if (val === \"\" || val === null || val === undefined) {\n            let emptyErr = config.emptyErr || `Please enter ${config.label || config.hiddenLabel || \"this field\"}`;\n            return {\n                valid: false,\n                errorMsg: emptyErr\n            };\n        } else {\n            return {\n                valid: true\n            };\n        }\n    },\n    email(val, config = {}) {\n        // let regex = /^([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d))*$/\n        let regex = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\n        let valid = regex.test(val);\n        return {\n            valid,\n            errorMsg: `Please Enter Valid ${config.label || config.hiddenLabel || \"Input\"}`\n        };\n    }\n};\nconst getValidators = validationProfileKeys => {\n    let validators = (validationProfileKeys || []).map(v => {\n        if (commonValidationProfiles[v] === undefined) {\n            if (typeof v === \"function\") return v;\n            if (v instanceof RegExp || validationService.validRegex(v)) {\n                let regExp = v;\n                if (validationService.validRegex(v)) regExp = validationService.regexpStringToObj(v);\n                return value => ({\n                    valid: regExp.test(value),\n                    errorMsg: \"Invalid Input\"\n                });\n            }\n            console.error(`no validation profile found for ${v}`);\n        }\n        return commonValidationProfiles[v];\n    });\n    return validators;\n};\nconst REGEX_SPLITTER = \"REGEX_SPLITTER\";\nconst validationService = {\n    regexpStringToObj(regexpString) {\n        let regexpMatcher = /\\/(.+)\\/([gmiyus]{0,6})/;\n        let regexpWithoutSlashes = regexpString.replace(regexpMatcher, `$1${REGEX_SPLITTER}$2`);\n        return new RegExp(...regexpWithoutSlashes.split(REGEX_SPLITTER));\n    },\n    validRegex(str) {\n        let isValid = true;\n        try {\n            new RegExp(str);\n        } catch (e) {\n            isValid = false;\n        }\n        return isValid;\n    },\n    validate(validators, { value, config }) {\n        let results = [];\n        for (let i = 0; i < validators.length; i++) {\n            let validator = validators[i];\n            if (validator) results.push(validator(value, config));\n        }\n        return results;\n    }\n};\n\nconst formFields = {\n    text: TextField,\n    select: SelectField,\n    date: DateTimeField\n};\nconst FormField = React.forwardRef(\n    (\n        {\n            controlled = false,\n            type = \"text\",\n            id = `uniqId-${+new Date()}`,\n            value = \"\",\n            onChange,\n            disabled,\n            required,\n            validationProfiles, // registered common validation methods\n            inputValidator, // custom validation method\n            inputValidations, // validate user input before setting it in state\n            liveValidations, // validate on every input update\n            ...restProps\n        },\n        ref\n    ) => {\n        let fieldOpts = {\n            // options that are to be passed ahead\n            type,\n            id,\n            disabled,\n            ...restProps\n        };\n\n        const inputRef = useRef();\n        const [_value, setValue] = useAsyncState(\"\");\n        const [errorMsg, setErrorMsg] = useState(\"\");\n\n        useEffect(() => {}, []);\n\n        const focus = () => inputRef.current.focus();\n\n        const getVal = () => (controlled ? value : _value);\n\n        const setVal = val => setValue(val);\n\n        const setError = msg => setErrorMsg(msg);\n\n        const clearError = () => setErrorMsg(\"\");\n\n        const val = val => {\n            if (val === undefined) return getVal();\n            return setVal(val);\n        };\n\n        const isValid = () => {\n            if ((required === false && getVal() === \"\") || disabled) {\n                clearError();\n                return true;\n            }\n            let validators = [\n                ...(inputValidator ? [inputValidator] : []),\n                ...getValidators(validationProfiles ? [\"default\", ...validationProfiles] : [\"default\"])\n            ];\n            let validationResults = validationService.validate(validators, {\n                value: getVal(),\n                fieldOpts\n            });\n            let errors = validationResults.filter(v => !v.valid);\n            if (errors.length) setError(errors[0].errorMsg);\n            return errorMsg ? false : errors.length === 0; /* In case error is set explicitly */\n        };\n\n        const isInputValid = value => {\n            let validators = getValidators(inputValidations);\n            let validationResults = validationService.validate(validators, {\n                value,\n                fieldOpts\n            });\n            return validationResults.every(v => v.valid === true);\n        };\n\n        const liveValidate = value => {\n            let liveValidators = getValidators(liveValidations || [\"default\"]);\n            let validationResults = validationService.validate(liveValidators, {\n                value,\n                fieldOpts\n            });\n            let errors = validationResults.filter(v => v.valid === false);\n            if (errors.length) setError(errors[0].errorMsg);\n        };\n\n        const onChangeInput = async (newVal, notFromUser) => {\n            if (inputValidations && !isInputValid(newVal)) return;\n            clearError();\n            if (controlled) {\n                if (liveValidations) liveValidate(newVal);\n                if (onChange) onChange(newVal);\n                return;\n            }\n            await setVal(newVal);\n            if (liveValidations) liveValidate(newVal);\n            if (onChange && !notFromUser) onChange(newVal);\n        };\n\n        useImperativeHandle(ref, () => ({\n            focus,\n            isValid,\n            val,\n            setError,\n            clearError\n        }));\n\n        let Field = formFields[type];\n        if (!Field) {\n            Field = formFields[\"text\"];\n            console.error(`FormField type : ${type} not found, falling back to 'text'`);\n        }\n        return (\n            <Field\n                ref={inputRef}\n                value={controlled ? value : _value}\n                onChangeInput={onChangeInput}\n                errorMsg={errorMsg}\n                helperText={errorMsg} // later accomodate warning and default texts\n                {...fieldOpts}\n            />\n        );\n    }\n);\n\nexport default FormField;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Table } from \"reactstrap\";\nimport { useTable, useSortBy, useFilters, usePagination } from \"react-table\";\nimport { displayFormatsMap, defaultDisplayFormat, getFilteredDisplayFormats } from \"@modules/Charts/constants\";\nimport { Api } from \"@services/ApiService\";\nimport FormField from \"@modules/Common/FormField\";\nimport { Row, Col, Button, Input, CustomInput } from \"reactstrap\";\n\nconst DefaultColumnFilter = ({\n    column: {\n        filterValue,\n        setFilter,\n        preFilteredRows: { length }\n    }\n}) => {\n    return (\n        <Input\n            value={filterValue || \"\"}\n            onChange={e => {\n                setFilter(e.target.value || undefined);\n            }}\n            placeholder={`search (${length}) ...`}\n        />\n    );\n};\n\nconst SelectColumnFilter = ({ column: { filterValue, setFilter, preFilteredRows, id } }) => {\n    const options = React.useMemo(() => {\n        const options = new Set();\n        preFilteredRows.forEach(row => {\n            options.add(row.values[id]);\n        });\n        return [...options.values()];\n    }, [id, preFilteredRows]);\n\n    return (\n        <CustomInput\n            id=\"custom-select\"\n            type=\"select\"\n            value={filterValue}\n            onChange={e => {\n                setFilter(e.target.value || undefined);\n            }}\n        >\n            <option value=\"\">All</option>\n            {options.map(option => (\n                <option key={option} value={option}>\n                    {option}\n                </option>\n            ))}\n        </CustomInput>\n    );\n};\n\nconst generateSortingIndicator = column => {\n    return column.isSorted ? (column.isSortedDesc ? \" 🔽\" : \" 🔼\") : \"\";\n};\n\nconst Filter = ({ column }) => {\n    return <div style={{ marginTop: 5 }}>{column.canFilter && column.render(\"Filter\")}</div>;\n};\n\nexport default function UserJourney() {\n    const [loading, setLoading] = useState([]);\n\n    const [opts, setOpts] = useState([]);\n    const [selectedOpt, setSelectedOpt] = useState([]);\n\n    const [tableStuff, setTableStuff] = useState({});\n\n    const [timeRange, setTimeRange] = useState({ min: 0, max: 0 });\n\n    const [displayFormat, setDisplayFormat] = useState(\"\");\n\n    const displayFormatRef = useRef();\n    const columnsConfigRef = useRef();\n    const timeRangeMinRef = useRef();\n\n    useEffect(async () => {\n        console.log(\"UserJourney mount - setOpts\");\n\n        try {\n            let resp = await Api.root.get(\n                \"/client/register/event\",\n                {},\n                {\n                    headers: {\n                        consumerKey: \"1fxb4orbwe8sr\"\n                    }\n                }\n            );\n            let results = resp.data.results[0].metaEventDoc;\n            setOpts(results.map(el => ({ label: el.eventDesc ? el.eventDesc : el.eventName, value: el.eventName })));\n        } catch (error) {}\n\n        return () => {\n            console.log(\"UserJourney mount - setOpts cleanup \");\n        };\n    }, []);\n\n    useEffect(async () => {\n        console.log(\"UserJourney mount \");\n\n        setDisplayFormat(defaultDisplayFormat);\n\n        const displayFormatDetails = displayFormatsMap[defaultDisplayFormat];\n        const displayFormatSuccessor = displayFormatsMap[displayFormatDetails.successor];\n        const end = new Date().valueOf();\n        const start = end - displayFormatSuccessor.ms;\n        setTimeRange(prev => ({ ...prev, min: start, max: end }));\n\n        return () => {\n            console.log(\"UserJourney mount cleanup \");\n        };\n    }, []);\n\n    const onChangeDisplayFormat = newVal => {\n        setDisplayFormat(newVal);\n        const displayFormatDetails = displayFormatsMap[newVal.value];\n        const displayFormatSuccessor = displayFormatsMap[displayFormatDetails.successor];\n        const end = new Date().valueOf();\n        const start = end - displayFormatSuccessor.ms;\n        setTimeRange(prev => ({ ...prev, min: start, max: end }));\n    };\n\n    const fetchData = async (min, max, eventNameList) => {\n        let resp = await Api.root.post(\n            \"/digital/analytics/user-events-count\",\n            {\n                dateRange1: min,\n                dateRange1Str: new Date(min),\n                dateRange2: max,\n                dateRange2Str: new Date(max),\n                displayFormat: displayFormat.value,\n                eventNameList\n            }\n        );\n        return resp.data.results;\n    };\n\n    const onClickSearch = async () => {\n        if ([displayFormatRef.current.isValid()].includes(false)) return;\n        let configuredCols = columnsConfigRef.current.val() || [];\n        let configuredColsList = configuredCols.map(el => el.value);\n        let data = await fetchData(timeRange.min, timeRange.max, configuredColsList);\n        console.log(\n            \"UserJourney - Fetched data between \" +\n                new Date(timeRange.min) +\n                \" and \" +\n                new Date(timeRange.max) +\n                \" for\",\n            configuredColsList,\n            { data }\n        );\n        setTableStuff(prev => ({\n            columns: configuredCols && configuredCols.length ? configuredCols : opts,\n            data\n        }));\n    };\n\n    let data = React.useMemo(() => {\n        console.log(\"memorising data\");\n        return tableStuff.data || [];\n    }, [tableStuff]);\n\n    let columns = React.useMemo(() => {\n        console.log(\"memorising columns\");\n        let defaultsCols = [\n            {\n                Header: \"Date / Time\",\n                accessor: \"dateStr\"\n            }\n        ];\n        let cols = (tableStuff.columns || []).map(el => ({\n            Header: el.label,\n            accessor: el.value,\n            Cell: row => row.value || \"-\"\n        }));\n        return cols.length ? defaultsCols.concat(cols) : [];\n    }, [tableStuff]);\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        // rows, -> we change 'rows' to 'page'\n        page,\n        prepareRow,\n        // below new props related to 'usePagination' hook\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageIndex, pageSize }\n    } = useTable(\n        { columns, data, defaultColumn: { Filter: DefaultColumnFilter }, initialState: { pageIndex: 0, pageSize: 10 } },\n        useFilters,\n        useSortBy,\n        usePagination\n    );\n\n    const onChangeInSelect = event => {\n        setPageSize(Number(event.target.value));\n    };\n\n    const onChangeInInput = event => {\n        const page = event.target.value ? Number(event.target.value) - 1 : 0;\n        gotoPage(page);\n    };\n\n    console.log(\"#render#\", { columns, data, tableStuff });\n    return (\n        <>\n            <div className=\"table-filters row mb-3\">\n                <div className=\"col-lg-12\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 mb-2\">\n                            <FormField\n                                ref={displayFormatRef}\n                                controlled={true}\n                                type=\"select\"\n                                id=\"displayFormat\"\n                                label=\"Unit\"\n                                options={Object.entries(getFilteredDisplayFormats()).map(([key, value]) => ({\n                                    label: key.toUpperCase(),\n                                    value: key\n                                }))}\n                                value={displayFormat}\n                                onChange={onChangeDisplayFormat}\n                            />\n                        </div>\n                        <div className=\"col-lg-3 mb-2\">\n                            <div className=\"form-group\">\n                                <label className=\"form-control-label\" htmlFor=\"start-time\">\n                                    Start\n                                </label>\n                                <input\n                                    style={{ width: \"100%\", color: !timeRange.min ? \"transparent\" : \"\" }}\n                                    className={\"form-control-alternative form-control\"}\n                                    type=\"date\"\n                                    id=\"start-time\"\n                                    value={timeRange.min ? new Date(timeRange.min).toISOString().split(\"T\")[0] : \"\"}\n                                    onChange={e =>\n                                        setTimeRange(prev => ({ ...prev, min: new Date(e.target.value).valueOf() }))\n                                    }\n                                />\n                            </div>\n                            {/* <FormField\n                                ref={timeRangeMinRef}\n                                type=\"date\"\n                                id=\"timeRangeMin\"\n                                label=\"Start\"\n                            /> */}\n                        </div>\n                        <div className=\"col-lg-3 mb-2\">\n                            <div className=\"form-group\">\n                                <label className=\"form-control-label\" htmlFor=\"end-time\">\n                                    End\n                                </label>\n                                <input\n                                    style={{ width: \"100%\", color: !timeRange.max ? \"transparent\" : \"\" }}\n                                    className={\"form-control-alternative form-control\"}\n                                    type=\"date\"\n                                    id=\"end-time\"\n                                    value={timeRange.max ? new Date(timeRange.max).toISOString().split(\"T\")[0] : \"\"}\n                                    onChange={e =>\n                                        setTimeRange(prev => ({ ...prev, max: new Date(e.target.value).valueOf() }))\n                                    }\n                                />\n                            </div>\n                        </div>\n                        <div className=\"col-lg-9 mb-2\">\n                            <FormField\n                                ref={columnsConfigRef}\n                                type=\"select\"\n                                id=\"columnsConfig\"\n                                placeholder={`configure columns`}\n                                options={opts}\n                                isSearchable\n                                isMulti\n                            />\n                        </div>\n                        <div className=\"col-lg-3 mb-2 d-flex align-items-start\">\n                            <button className=\"btn btn-primary\" onClick={onClickSearch}>\n                                <i className=\"fa fa-search\" />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {data.length ? (\n                <>\n                    {/* <div className=\"table-responsive\">\n                    <table {...getTableProps()} className=\"align-items-center table-flush table\"> */}\n                    <Table {...getTableProps()} className=\"align-items-center table-flush\" responsive bordered>\n                        <thead className=\"thead-light\">\n                            {headerGroups.map(headerGroup => (\n                                <tr {...headerGroup.getHeaderGroupProps()}>\n                                    {headerGroup.headers.map(column => (\n                                        // <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n\n                                        // <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                        //     {column.render(\"Header\")}\n                                        //     {generateSortingIndicator(column)}\n                                        // </th>\n\n                                        <th {...column.getHeaderProps()} style={{ padding: \"1rem\", fontSize: \"13px\" }}>\n                                            <div {...column.getSortByToggleProps()}>\n                                                {column.render(\"Header\")}\n                                                {generateSortingIndicator(column)}\n                                            </div>\n                                            {/* <Filter column={column} /> */}\n                                        </th>\n                                    ))}\n                                </tr>\n                            ))}\n                        </thead>\n                        <tbody {...getTableBodyProps()}>\n                            {page.map(row => {\n                                prepareRow(row);\n                                return (\n                                    <tr {...row.getRowProps()}>\n                                        {row.cells.map(cell => {\n                                            return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n                                        })}\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                    </Table>\n                    {/* </table>\n                </div> */}\n                    <Row style={{ maxWidth: 1000, margin: \"0 auto\", textAlign: \"center\" }}>\n                        <Col md={3}>\n                            <Button color=\"primary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                                {\"<<\"}\n                            </Button>\n                            <Button color=\"primary\" onClick={previousPage} disabled={!canPreviousPage}>\n                                {\"<\"}\n                            </Button>\n                        </Col>\n                        <Col md={2} style={{ marginTop: 7 }}>\n                            Page{\" \"}\n                            <strong>\n                                {pageIndex + 1} of {pageOptions.length}\n                            </strong>\n                        </Col>\n                        <Col md={2}>\n                            <Input\n                                type=\"number\"\n                                min={1}\n                                style={{ width: 70 }}\n                                max={pageOptions.length}\n                                defaultValue={pageIndex + 1}\n                                onChange={onChangeInInput}\n                            />\n                        </Col>\n                        <Col md={2}>\n                            <CustomInput id=\"page-size\" type=\"select\" value={pageSize} onChange={onChangeInSelect}>\n                                {[5, 10, 20, 30, 40, 50].map(pageSize => (\n                                    <option key={pageSize} value={pageSize}>\n                                        Show {pageSize}\n                                    </option>\n                                ))}\n                            </CustomInput>\n                        </Col>\n                        <Col md={3}>\n                            <Button color=\"primary\" onClick={nextPage} disabled={!canNextPage}>\n                                {\">\"}\n                            </Button>\n                            <Button color=\"primary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                                {\">>\"}\n                            </Button>\n                        </Col>\n                    </Row>\n                </>\n            ) : null}\n        </>\n    );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { displayFormatsMap, defaultDisplayFormat, getFilteredDisplayFormats } from \"@modules/Charts/constants\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Api } from \"@services/ApiService\";\nimport FormField from \"@modules/Common/FormField\";\n\nexport default function EngagementAnalysis() {\n    const [loading, setLoading] = useState([]);\n    const [chartData, setChartData] = useState({});\n    const [timeRange, setTimeRange] = useState({ min: 0, max: 0 });\n    const [displayFormat, setDisplayFormat] = useState(\"\");\n    const chartRef = useRef();\n    const displayFormatRef = useRef();\n    // const timeRangeMinRef = useRef();\n\n    useEffect(async () => {\n        console.log(\"EngagementAnalysis mount \");\n\n        setDisplayFormat(defaultDisplayFormat);\n\n        const displayFormatDetails = displayFormatsMap[defaultDisplayFormat];\n        const displayFormatSuccessor = displayFormatsMap[displayFormatDetails.successor];\n        const end = new Date().valueOf();\n        const start = end - displayFormatSuccessor.ms;\n        setTimeRange(prev => ({ ...prev, min: start, max: end }));\n\n        let data = await fetchData(start, end, { value: defaultDisplayFormat });\n        console.log(\"EngagementAnalysis - Fetched data between \" + new Date(start) + \" and \" + new Date(end), {\n            data\n        });\n        setChartData({\n            labels: data.map(el => Object.keys(el)[0]),\n            datasets: [\n                {\n                    label: \"Total\",\n                    data: data.map(el => Object.values(el)[0]),\n                    parsing: {\n                        xAxisKey: \"durationRange\",\n                        yAxisKey: \"count\"\n                    },\n                    backgroundColor: \"#fc8d59\",\n                    borderColor: \"#fc8d59\",\n                    borderColor: \"white\"\n                }\n            ]\n        });\n\n        return () => {\n            console.log(\"EngagementAnalysis mount cleanup \");\n        };\n    }, []);\n\n    const onChangeDisplayFormat = newVal => {\n        setDisplayFormat(newVal);\n        const displayFormatDetails = displayFormatsMap[newVal.value];\n        const displayFormatSuccessor = displayFormatsMap[displayFormatDetails.successor];\n        const end = new Date().valueOf();\n        const start = end - displayFormatSuccessor.ms;\n        setTimeRange(prev => ({ ...prev, min: start, max: end }));\n    };\n\n    const fetchData = async (min, max, df = displayFormat) => {\n        let resp = await Api.root.post(\"/digital/analytics/engagement-duration\", {\n            dateRange1: min,\n            dateRange1Str: new Date(min),\n            dateRange2: max,\n            dateRange2Str: new Date(max),\n            displayFormat: df.value\n        });\n        return resp.data.results;\n    };\n\n    const onClickSearch = async () => {\n        if ([displayFormatRef.current.isValid()].includes(false)) return;\n        let data = await fetchData(timeRange.min, timeRange.max);\n        console.log(\n            \"EngagementAnalysis - Fetched data between \" +\n                new Date(timeRange.min) +\n                \" and \" +\n                new Date(timeRange.max) +\n                \" for\",\n            { data }\n        );\n        setChartData({\n            labels: data.map(el => Object.keys(el)[0]),\n            datasets: [\n                {\n                    label: \"Total\",\n                    data: data.map(el => Object.values(el)[0]),\n                    parsing: {\n                        xAxisKey: \"durationRange\",\n                        yAxisKey: \"count\"\n                    },\n                    backgroundColor: \"#fc8d59\",\n                    borderColor: \"#fc8d59\",\n                    borderColor: \"white\"\n                }\n            ]\n        });\n    };\n\n    return (\n        <>\n            <div className=\"table-filters row mb-3\">\n                <div className=\"col-lg-12\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 mb-2\">\n                            <FormField\n                                ref={displayFormatRef}\n                                controlled={true}\n                                type=\"select\"\n                                id=\"displayFormat\"\n                                label=\"Unit\"\n                                options={Object.entries(getFilteredDisplayFormats()).map(([key, value]) => ({\n                                    label: key.toUpperCase(),\n                                    value: key\n                                }))}\n                                value={displayFormat}\n                                onChange={onChangeDisplayFormat}\n                            />\n                        </div>\n                        <div className=\"col-lg-3 mb-2\">\n                            <div className=\"form-group\">\n                                <label className=\"form-control-label\" htmlFor=\"start-time\">\n                                    Start\n                                </label>\n                                <input\n                                    style={{ width: \"100%\", color: !timeRange.min ? \"transparent\" : \"\" }}\n                                    className={\"form-control-alternative form-control\"}\n                                    type=\"date\"\n                                    id=\"start-time\"\n                                    value={timeRange.min ? new Date(timeRange.min).toISOString().split(\"T\")[0] : \"\"}\n                                    onChange={e =>\n                                        setTimeRange(prev => ({ ...prev, min: new Date(e.target.value).valueOf() }))\n                                    }\n                                />\n                            </div>\n                            {/* <FormField\n                                ref={timeRangeMinRef}\n                                type=\"date\"\n                                id=\"timeRangeMin\"\n                                label=\"Start\"\n                            /> */}\n                        </div>\n                        <div className=\"col-lg-3 mb-2\">\n                            <div className=\"form-group\">\n                                <label className=\"form-control-label\" htmlFor=\"end-time\">\n                                    End\n                                </label>\n                                <input\n                                    style={{ width: \"100%\", color: !timeRange.max ? \"transparent\" : \"\" }}\n                                    className={\"form-control-alternative form-control\"}\n                                    type=\"date\"\n                                    id=\"end-time\"\n                                    value={timeRange.max ? new Date(timeRange.max).toISOString().split(\"T\")[0] : \"\"}\n                                    onChange={e =>\n                                        setTimeRange(prev => ({ ...prev, max: new Date(e.target.value).valueOf() }))\n                                    }\n                                />\n                            </div>\n                        </div>\n                        <div className=\"col-lg-3 mb-2\">\n                            <button className=\"btn btn-primary\" style={{ marginTop: \"31px\" }} onClick={onClickSearch}>\n                                <i className=\"fa fa-search\" />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Bar\n                ref={chartRef}\n                data={chartData}\n                options={{\n                    // maintainAspectRatio: false,\n                    responsive: true,\n                    barThickness: 30,\n                    scales: {\n                        x: {\n                            grid: {\n                                display: false\n                            },\n                            beginAtZero: true,\n                            position: \"bottom\",\n                        },\n                        y: {\n                            grid: {\n                                display: false\n                            },\n                            beginAtZero: true,\n                            position: \"left\"\n                        }\n                    },\n                    plugins: {\n                        title: {\n                            display: false,\n                            position: \"top\",\n                            text: ctx => {\n                                return `\n                                    Chart Info [ zoom level : ${ctx.chart.getZoomLevel()} ] [ start : ${\n                                    ctx.chart.scales.x.min &&\n                                    ctx.chart.scales.x.min != -1 &&\n                                    ctx.chart.scales.x.min != 1\n                                        ? new Date(ctx.chart.scales.x.min).toISOString().split(\"T\")[0]\n                                        : \"-\"\n                                }, end : ${\n                                    ctx.chart.scales.x.max &&\n                                    ctx.chart.scales.x.max != -1 &&\n                                    ctx.chart.scales.x.max != 1\n                                        ? new Date(ctx.chart.scales.x.max).toISOString().split(\"T\")[0]\n                                        : \"-\"\n                                } ]\n                                `;\n                            }\n                        },\n                        legend: {\n                            display: true,\n                            position: \"top\",\n                            labels: {\n                                usePointStyle: true,\n                                pointStyle: \"rectRounded\"\n                            }\n                        }\n                    },\n                    transitions: {\n                        zoom: {\n                            animation: {\n                                duration: 100\n                            }\n                        }\n                    }\n                }}\n            />\n        </>\n    );\n}\n","import React, { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport { Button, Card, CardHeader, CardTitle, CardBody, NavItem, NavLink, Nav, Table, Row, Col } from \"reactstrap\";\nimport ContentWrapper from \"@modules/Common/ContentWrapper\";\n\nimport { Chart } from \"chart.js\";\nimport zoomPlugin from \"chartjs-plugin-zoom\";\nChart.register(zoomPlugin);\n\n// import ChartExample from \"@modules/Charts\";\nimport UserBase from \"@modules/Charts/UserBase\";\nimport ActiveUsers from \"@modules/Charts/ActiveUsers\";\nimport CrashAnalysis from \"@modules/Charts/CrashAnalysis\";\nimport TrafficAnalysis from \"@modules/Charts/TrafficAnalysis\";\nimport UserJourney from \"@modules/Charts/UserJourney\";\nimport EngagementAnalysis from \"@modules/Charts/EngagementAnalysis\";\n\nconst scrollToRef = ref => ref.current.scrollIntoView({ behavior: \"smooth\" });\n\nconst Dashboard = props => {\n    const cardStats1 = useRef();\n\n    useEffect(async () => {\n        console.log(\"Dashboard Mount :: \");\n\n        return () => {\n            console.log(\"Dashboard unMount :: \");\n        };\n    }, []);\n\n    return (\n        <ContentWrapper\n            contentHeader={\n                <Row>\n                    <Col lg=\"6\" xl=\"3\">\n                        <Card className=\"card-stats mb-4 mb-xl-0 cursor-pointer\" onClick={() => scrollToRef(cardStats1)}>\n                            <CardBody>\n                                <Row>\n                                    <div className=\"col\">\n                                        <CardTitle tag=\"h5\" className=\"text-uppercase text-muted mb-0\">\n                                            Traffic\n                                        </CardTitle>\n                                        <span className=\"h2 font-weight-bold mb-0\">350,897</span>\n                                    </div>\n                                    <Col className=\"col-auto\">\n                                        <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                                            <i className=\"fas fa-chart-bar\" />\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <p className=\"mt-3 mb-0 text-muted text-sm\">\n                                    <span className=\"text-success mr-2\">\n                                        <i className=\"fa fa-arrow-up\" /> 3.48%\n                                    </span>{\" \"}\n                                    <span className=\"text-nowrap\">Since last month</span>\n                                </p>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col lg=\"6\" xl=\"3\">\n                        <Card className=\"card-stats mb-4 mb-xl-0\">\n                            <CardBody>\n                                <Row>\n                                    <div className=\"col\">\n                                        <CardTitle tag=\"h5\" className=\"text-uppercase text-muted mb-0\">\n                                            New users\n                                        </CardTitle>\n                                        <span className=\"h2 font-weight-bold mb-0\">2,356</span>\n                                    </div>\n                                    <Col className=\"col-auto\">\n                                        <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                                            <i className=\"fas fa-chart-pie\" />\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <p className=\"mt-3 mb-0 text-muted text-sm\">\n                                    <span className=\"text-danger mr-2\">\n                                        <i className=\"fas fa-arrow-down\" /> 3.48%\n                                    </span>{\" \"}\n                                    <span className=\"text-nowrap\">Since last week</span>\n                                </p>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col lg=\"6\" xl=\"3\">\n                        <Card className=\"card-stats mb-4 mb-xl-0\">\n                            <CardBody>\n                                <Row>\n                                    <div className=\"col\">\n                                        <CardTitle tag=\"h5\" className=\"text-uppercase text-muted mb-0\">\n                                            Sales\n                                        </CardTitle>\n                                        <span className=\"h2 font-weight-bold mb-0\">924</span>\n                                    </div>\n                                    <Col className=\"col-auto\">\n                                        <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                                            <i className=\"fas fa-users\" />\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <p className=\"mt-3 mb-0 text-muted text-sm\">\n                                    <span className=\"text-warning mr-2\">\n                                        <i className=\"fas fa-arrow-down\" /> 1.10%\n                                    </span>{\" \"}\n                                    <span className=\"text-nowrap\">Since yesterday</span>\n                                </p>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col lg=\"6\" xl=\"3\">\n                        <Card className=\"card-stats mb-4 mb-xl-0\">\n                            <CardBody>\n                                <Row>\n                                    <div className=\"col\">\n                                        <CardTitle tag=\"h5\" className=\"text-uppercase text-muted mb-0\">\n                                            Performance\n                                        </CardTitle>\n                                        <span className=\"h2 font-weight-bold mb-0\">49,65%</span>\n                                    </div>\n                                    <Col className=\"col-auto\">\n                                        <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                                            <i className=\"fas fa-percent\" />\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <p className=\"mt-3 mb-0 text-muted text-sm\">\n                                    <span className=\"text-success mr-2\">\n                                        <i className=\"fas fa-arrow-up\" /> 12%\n                                    </span>{\" \"}\n                                    <span className=\"text-nowrap\">Since last month</span>\n                                </p>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            }\n        >\n            <Row>\n                <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n                    <Card className=\"shadow\">\n                        <CardHeader className=\"bg-transparent\">\n                            <Row className=\"align-items-center\">\n                                <div className=\"col\">\n                                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">Stacked Line</h6>\n                                    <h2 className=\"mb-0\">App User Base</h2>\n                                </div>\n                            </Row>\n                        </CardHeader>\n                        <CardBody>\n                            <UserBase />\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"mt-5\">\n                <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n                    <Card className=\"shadow\">\n                        <CardHeader className=\"bg-transparent\">\n                            <Row className=\"align-items-center\">\n                                <div className=\"col\">\n                                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">Stacked Bar</h6>\n                                    <h2 className=\"mb-0\">Active Users</h2>\n                                </div>\n                            </Row>\n                        </CardHeader>\n                        <CardBody>\n                            <ActiveUsers />\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"mt-5\">\n                <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n                    <Card className=\"shadow\">\n                        <CardHeader className=\"bg-transparent\">\n                            <Row className=\"align-items-center\">\n                                <div className=\"col\">\n                                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">Pie</h6>\n                                    <h2 className=\"mb-0\">Traffic Analysis</h2>\n                                </div>\n                            </Row>\n                        </CardHeader>\n                        <CardBody>\n                            <TrafficAnalysis />\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"mt-5\">\n                <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n                    <Card className=\"shadow\" innerRef={cardStats1}>\n                        <CardHeader className=\"bg-transparent\">\n                            <Row className=\"align-items-center\">\n                                <div className=\"col\">\n                                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">Table</h6>\n                                    <h3 className=\"mb-0\">User Journey</h3>\n                                </div>\n                            </Row>\n                        </CardHeader>\n                        <CardBody>\n                            <UserJourney />\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"mt-5\">\n                <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n                    <Card className=\"shadow\">\n                        <CardHeader className=\"bg-transparent\">\n                            <Row className=\"align-items-center\">\n                                <div className=\"col\">\n                                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">Stacked Bar</h6>\n                                    <h2 className=\"mb-0\">Crash Analysis</h2>\n                                </div>\n                            </Row>\n                        </CardHeader>\n                        <CardBody>\n                            <CrashAnalysis />\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"mt-5\">\n                <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n                    <Card className=\"shadow\">\n                        <CardHeader className=\"bg-transparent\">\n                            <Row className=\"align-items-center\">\n                                <div className=\"col\">\n                                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">Bar</h6>\n                                    <h2 className=\"mb-0\">Engagement Analysis</h2>\n                                </div>\n                            </Row>\n                        </CardHeader>\n                        <CardBody>\n                            <EngagementAnalysis />\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n            {/* <Row className=\"mt-5\">\n                <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n                    <Card className=\"shadow\">\n                        <CardHeader className=\"bg-transparent\">\n                            <Row className=\"align-items-center\">\n                                <div className=\"col\">\n                                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">Example Line + zoom & pan</h6>\n                                    <h2 className=\"mb-0\">Sales value</h2>\n                                </div>\n                            </Row>\n                        </CardHeader>\n                        <CardBody>\n                            <ChartExample />\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"mt-5\">\n                <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n                    <Card className=\"shadow\">\n                        <CardHeader className=\"border-0\">\n                            <Row className=\"align-items-center\">\n                                <div className=\"col\">\n                                    <h3 className=\"mb-0\">Page visits</h3>\n                                </div>\n                                <div className=\"col text-right\">\n                                    <Button color=\"primary\" href=\"#pablo\" onClick={e => e.preventDefault()} size=\"sm\">\n                                        See all\n                                    </Button>\n                                </div>\n                            </Row>\n                        </CardHeader>\n                        <Table className=\"align-items-center table-flush\" responsive>\n                            <thead className=\"thead-light\">\n                                <tr>\n                                    <th scope=\"col\">Page name</th>\n                                    <th scope=\"col\">Visitors</th>\n                                    <th scope=\"col\">Unique users</th>\n                                    <th scope=\"col\">Bounce rate</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope=\"row\">/argon/</th>\n                                    <td>4,569</td>\n                                    <td>340</td>\n                                    <td>\n                                        <i className=\"fas fa-arrow-up text-success mr-3\" /> 46,53%\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">/argon/index.html</th>\n                                    <td>3,985</td>\n                                    <td>319</td>\n                                    <td>\n                                        <i className=\"fas fa-arrow-down text-warning mr-3\" /> 46,53%\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">/argon/charts.html</th>\n                                    <td>3,513</td>\n                                    <td>294</td>\n                                    <td>\n                                        <i className=\"fas fa-arrow-down text-warning mr-3\" /> 36,49%\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">/argon/tables.html</th>\n                                    <td>2,050</td>\n                                    <td>147</td>\n                                    <td>\n                                        <i className=\"fas fa-arrow-up text-success mr-3\" /> 50,87%\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">/argon/profile.html</th>\n                                    <td>1,795</td>\n                                    <td>190</td>\n                                    <td>\n                                        <i className=\"fas fa-arrow-down text-danger mr-3\" /> 46,53%\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </Card>\n                </Col>\n            </Row> */}\n        </ContentWrapper>\n    );\n};\n\nexport default Dashboard;\n","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1678953712817\n      var cssReload = require(\"/Users/vj/Projects/amx/cherry-insights/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["props","className","Container","fluid","contentHeader","style","minHeight","children","window","localStorage","utils","params","str","key","hasOwnProperty","Api","root","prefix","responseBuilder","res","url","data","options","request","method","post","headers","getUrl","axiosArgs","getAxiosArgs","axios","response","status","console","log","message","interceptorResp","Promise","resolve","urlType","toLowerCase","_options","Accept","responseType","cancelToken","this","location","href","indexOf","displayFormatsArr","order","name","label","value","outputExample","successor","predecessor","timeValue","ms","year","Date","getFullYear","month","getMonth","startDayOfWeek","firstDayOfWeek","firstOfMonth","lastOfMonth","numberOfDaysInMonth","getDate","firstWeekDay","getDay","used","Math","ceil","getWeeksCountInMonth","getDaysCountInMonth","quarter","floor","leapYear","normalYear","isLeap","getDaysCountInQuarter","getDaysCountInYear","displayFormatsMap","forEach","el","defaultDisplayFormat","getFilteredDisplayFormats","result","colorArray","useState","chartData","setChartData","displayFormat","setDisplayFormat","min","max","timeRange","setTimeRange","timeAxisRange","setTimeAxisRange","chartRef","useRef","useEffect","displayFormatDetails","displayFormatSuccessor","end","valueOf","start","prev","axisEnd","axisStart","fetchApiData","datasets","processData","activeCustomers","parsing","xAxisKey","yAxisKey","borderColor","backgroundColor","stack","inActiveCustomers","lostCustomers","newUser","activeUser","timer","zoom","current","df","dateRange1","dateRange1Str","dateRange2","dateRange2Str","resp","results","map","Count","sort","el1","el2","date","startFetch","_min","_max","chart","scales","x","clearTimeout","setTimeout","stop","update","height","htmlFor","width","id","onChange","e","target","Object","entries","toUpperCase","title","onClick","resetZoom","ref","responsive","grid","display","beginAtZero","position","type","ticks","autoSkip","autoSkipPadding","maxRotation","time","unit","displayFormats","y","stacked","plugins","text","ctx","getZoomLevel","toISOString","split","legend","labels","usePointStyle","pointStyle","pan","enabled","mode","threshold","onPanComplete","wheel","speed","drag","pinch","onZoomComplete","limits","minRange","transitions","animation","duration","elements","line","pointRadius","tension","fetchData","WEB","IOS","barThickness","loading","setLoading","_data","slice","length","dataMap","dateStr","rest","keys","values","onClickSearch","color","maintainAspectRatio","commonValidationProfiles","val","config","emptyErr","hiddenLabel","valid","errorMsg","email","regex","test","getValidators","validationProfileKeys","v","undefined","RegExp","validationService","validRegex","regExp","regexpStringToObj","error","REGEX_SPLITTER","regexpString","regexpWithoutSlashes","replace","isValid","validate","validators","i","validator","push","formFields","React","onChangeInput","helperText","restProps","select","defaultValue","disabled","find","opt","styles","control","state","isFocussed","boxShadow","border","borderRadius","WebkitBoxShadow","transition","newVal","isDisabled","controlled","required","validationProfiles","inputValidator","inputValidations","liveValidations","fieldOpts","inputRef","useAsyncState","_value","setValue","setErrorMsg","focus","getVal","setVal","setError","msg","clearError","errors","filter","isInputValid","every","liveValidate","liveValidators","notFromUser","useImperativeHandle","Field","DefaultColumnFilter","column","filterValue","setFilter","preFilteredRows","Input","placeholder","UserJourney","opts","setOpts","tableStuff","setTableStuff","displayFormatRef","columnsConfigRef","get","consumerKey","metaEventDoc","eventDesc","eventName","eventNameList","includes","configuredCols","configuredColsList","columns","cols","Header","accessor","Cell","row","concat","useTable","defaultColumn","Filter","initialState","pageIndex","pageSize","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","isSearchable","isMulti","Table","bordered","headerGroup","getHeaderGroupProps","getHeaderProps","padding","fontSize","getSortByToggleProps","render","isSorted","isSortedDesc","generateSortingIndicator","getRowProps","cells","cell","getCellProps","Row","maxWidth","margin","textAlign","Col","md","Button","marginTop","event","Number","EngagementAnalysis","Chart","zoomPlugin","cardStats1","lg","xl","Card","scrollIntoView","behavior","CardBody","CardTitle","tag","CardHeader","innerRef","cssReload","module","hot","dispose","accept","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","exports"],"sourceRoot":""}